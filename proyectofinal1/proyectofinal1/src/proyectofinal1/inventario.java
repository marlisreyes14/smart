/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectofinal1;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class inventario extends javax.swing.JPanel {
 conector conecta = new conector();
        Connection con = conecta.getConexion();
    /**
     * Creates new form inventario
     */
    public inventario() {
        initComponents();
        mostrar("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btn_aceptar = new javax.swing.JButton();
        rdb_identificacion = new javax.swing.JRadioButton();
        rdb_nombres = new javax.swing.JRadioButton();
        rdb_referencia = new javax.swing.JRadioButton();
        rdb_stock = new javax.swing.JRadioButton();
        tlabel1 = new javax.swing.JLabel();
        buscar = new javax.swing.JTextField();
        rdb_cantidad = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tbl_datos = new javax.swing.JTable();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        btn_aceptar.setBackground(new java.awt.Color(255, 255, 255));
        btn_aceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Aceptar.png"))); // NOI18N
        btn_aceptar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_aceptarActionPerformed(evt);
            }
        });

        rdb_identificacion.setBackground(new java.awt.Color(255, 255, 255));
        rdb_identificacion.setText("ID");
        rdb_identificacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdb_identificacionActionPerformed(evt);
            }
        });

        rdb_nombres.setBackground(new java.awt.Color(255, 255, 255));
        rdb_nombres.setText("Nombres");
        rdb_nombres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdb_nombresActionPerformed(evt);
            }
        });

        rdb_referencia.setBackground(new java.awt.Color(255, 255, 255));
        rdb_referencia.setText("Referencia");
        rdb_referencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdb_referenciaActionPerformed(evt);
            }
        });

        rdb_stock.setBackground(new java.awt.Color(255, 255, 255));
        rdb_stock.setText("Stock");

        tlabel1.setText("Valor a buscar:");

        buscar.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        buscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                buscarKeyReleased(evt);
            }
        });

        rdb_cantidad.setBackground(new java.awt.Color(255, 255, 255));
        rdb_cantidad.setText("Cantidad");
        rdb_cantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdb_cantidadActionPerformed(evt);
            }
        });

        Tbl_datos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(Tbl_datos);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(rdb_identificacion)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rdb_nombres)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rdb_referencia)
                                .addGap(9, 9, 9)
                                .addComponent(rdb_stock)
                                .addGap(6, 6, 6)
                                .addComponent(rdb_cantidad)
                                .addGap(27, 27, 27))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(tlabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(btn_aceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 617, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rdb_stock, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rdb_identificacion)
                        .addComponent(rdb_nombres)
                        .addComponent(rdb_referencia)
                        .addComponent(rdb_cantidad)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tlabel1)
                    .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_aceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_aceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_aceptarActionPerformed
        // TODO add your handling code here:
        if(rdb_identificacion.isSelected()){
            mostrar(buscar.getText());
        }else if(rdb_nombres.isSelected()){
            mostrar2(buscar.getText());
        }else if (rdb_referencia.isSelected()){
            mostrar3(buscar.getText());
        }else if (rdb_cantidad.isSelected()){
            mostrar4(buscar.getText());
        }else if(rdb_stock.isSelected()){
            mostrar5(buscar.getText());
        }else{
            mostrar6(buscar.getText());
        }

    }//GEN-LAST:event_btn_aceptarActionPerformed

    private void rdb_identificacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdb_identificacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdb_identificacionActionPerformed

    private void rdb_nombresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdb_nombresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdb_nombresActionPerformed

    private void buscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscarKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_buscarKeyReleased

    private void rdb_cantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdb_cantidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdb_cantidadActionPerformed

    private void rdb_referenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdb_referenciaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdb_referenciaActionPerformed
public  void mostrar(String nombre){
  DefaultTableModel  modelo = new DefaultTableModel();
  modelo.addColumn("Id del producto");
        modelo.addColumn("Nombre del producto");
        modelo.addColumn("Referencia del producto");
        modelo.addColumn("Stock del producto");
        modelo.addColumn("Cantidad del producto");
        modelo.addColumn("total del precio");
       Tbl_datos.setModel(modelo);
        String sql="";
        if(nombre.equals("")){
            sql="SELECT * FROM `producto`";
            
            
        
        }else{
            sql="SELECT * FROM `producto` WHERE ID_PRODUCTO  like'%"+nombre+"%'";
        }
        String usuarios[]=new String[6];
        Statement set;
    try {
        set = con.createStatement();
        ResultSet result=set.executeQuery(sql);
        while(result.next()){
            usuarios[0]=result.getString(1);
            usuarios[1]=result.getString(2);
            usuarios[2]=result.getString(3);
            usuarios[3]=result.getString(4);
            usuarios[4]=result.getString(5);
            usuarios[5]=result.getString(6);
            modelo.addRow(usuarios);
        }
        Tbl_datos.setModel(modelo);
    } catch (SQLException ex) {
        Logger.getLogger(inventario.class.getName()).log(Level.SEVERE, null, ex);
    }
        
}
public  void mostrar2(String nombre){
  DefaultTableModel  modelo = new DefaultTableModel();
  modelo.addColumn("Id del producto");
        modelo.addColumn("Nombre del producto");
        modelo.addColumn("Referencia del producto");
        modelo.addColumn("Stock del producto");
        modelo.addColumn("Cantidad del producto");
        modelo.addColumn("total del precio");
       Tbl_datos.setModel(modelo);
        String sql="";
        if(nombre.equals("")){
            sql="SELECT * FROM `producto`";
            
            
        
        }else{
            sql="SELECT * FROM `producto` WHERE NOMBRE_PRODUCTO like'%"+nombre+"%'";
        }
        String usuarios[]=new String[6];
        Statement set;
    try {
        set = con.createStatement();
        ResultSet result=set.executeQuery(sql);
        while(result.next()){
            usuarios[0]=result.getString(1);
            usuarios[1]=result.getString(2);
            usuarios[2]=result.getString(3);
            usuarios[3]=result.getString(4);
            usuarios[4]=result.getString(5);
            usuarios[5]=result.getString(6);
            modelo.addRow(usuarios);
        }
        Tbl_datos.setModel(modelo);
    } catch (SQLException ex) {
        Logger.getLogger(inventario.class.getName()).log(Level.SEVERE, null, ex);
    }
        
}
public  void mostrar3(String nombre){
  DefaultTableModel  modelo = new DefaultTableModel();
modelo.addColumn("Id del producto");
        modelo.addColumn("Nombre del producto");
        modelo.addColumn("Referencia del producto");
        modelo.addColumn("Stock del producto");
        modelo.addColumn("Cantidad del producto");
        modelo.addColumn("total del precio");
       Tbl_datos.setModel(modelo);
        String sql="";
        if(nombre.equals("")){
            sql="SELECT * FROM `producto`";
            
            
        
        }else{
            sql="SELECT * FROM `producto` WHERE REFERENCIAS_DEL_PRODUCTO like'%"+nombre+"%'";
        }
        String usuarios[]=new String[6];
        Statement set;
    try {
        set = con.createStatement();
        ResultSet result=set.executeQuery(sql);
        while(result.next()){
            usuarios[0]=result.getString(1);
            usuarios[1]=result.getString(2);
            usuarios[2]=result.getString(3);
            usuarios[3]=result.getString(4);
            usuarios[4]=result.getString(5);
            usuarios[5]=result.getString(6);
            modelo.addRow(usuarios);
        }
        Tbl_datos.setModel(modelo);
    } catch (SQLException ex) {
        Logger.getLogger(inventario.class.getName()).log(Level.SEVERE, null, ex);
    }
        
}
public  void mostrar4(String nombre){
  DefaultTableModel  modelo = new DefaultTableModel();
modelo.addColumn("Id del producto");
        modelo.addColumn("Nombre del producto");
        modelo.addColumn("Referencia del producto");
        modelo.addColumn("Stock del producto");
        modelo.addColumn("Cantidad del producto");
        modelo.addColumn("total del precio");
       Tbl_datos.setModel(modelo);
        String sql="";
        if(nombre.equals("")){
            sql="SELECT * FROM `producto`";
            
            
        
        }else{
            sql="SELECT * FROM `producto`WHERE CANTIDAD_PRODUCTO like'%"+nombre+"%'";
        }
        String usuarios[]=new String[6];
        Statement set;
    try {
        set = con.createStatement();
        ResultSet result=set.executeQuery(sql);
        while(result.next()){
            usuarios[0]=result.getString(1);
            usuarios[1]=result.getString(2);
            usuarios[2]=result.getString(3);
            usuarios[3]=result.getString(4);
            usuarios[4]=result.getString(5);
            usuarios[5]=result.getString(6);
            modelo.addRow(usuarios);
        }
        Tbl_datos.setModel(modelo);
    } catch (SQLException ex) {
        Logger.getLogger(inventario.class.getName()).log(Level.SEVERE, null, ex);
    }
        
}
public  void mostrar5(String nombre){
  DefaultTableModel  modelo = new DefaultTableModel();
modelo.addColumn("Id del producto");
        modelo.addColumn("Nombre del producto");
        modelo.addColumn("Referencia del producto");
        modelo.addColumn("Stock del producto");
        modelo.addColumn("Cantidad del producto");
        modelo.addColumn("total del precio");
       Tbl_datos.setModel(modelo);
        String sql="";
        if(nombre.equals("")){
            sql="SELECT * FROM `producto`";
            
            
        
        }else{
            sql="SELECT * FROM `producto` WHERE STOCK_DEL_PRODUCTO like'%"+nombre+"%'";
        }
        String usuarios[]=new String[6];
        Statement set;
    try {
        set = con.createStatement();
        ResultSet result=set.executeQuery(sql);
        while(result.next()){
            usuarios[0]=result.getString(1);
            usuarios[1]=result.getString(2);
            usuarios[2]=result.getString(3);
            usuarios[3]=result.getString(4);
            usuarios[4]=result.getString(5);
            usuarios[5]=result.getString(6);
            modelo.addRow(usuarios);
        }
        Tbl_datos.setModel(modelo);
    } catch (SQLException ex) {
        Logger.getLogger(inventario.class.getName()).log(Level.SEVERE, null, ex);
    }
        
}
public  void mostrar6(String nombre){
  DefaultTableModel  modelo = new DefaultTableModel();
modelo.addColumn("Id del producto");
        modelo.addColumn("Nombre del producto");
        modelo.addColumn("Referencia del producto");
        modelo.addColumn("Stock del producto");
        modelo.addColumn("Cantidad del producto");
        modelo.addColumn("total del precio");
       Tbl_datos.setModel(modelo);
        String sql="";
        if(nombre.equals("")){
            sql="SELECT * FROM `producto`";
            
            
        
        }else{
            sql="SELECT * FROM `producto`";
        }
        String usuarios[]=new String[6];
        Statement set;
    try {
        set = con.createStatement();
        ResultSet result=set.executeQuery(sql);
        while(result.next()){
            usuarios[0]=result.getString(1);
            usuarios[1]=result.getString(2);
            usuarios[2]=result.getString(3);
            usuarios[3]=result.getString(4);
            usuarios[4]=result.getString(5);
            usuarios[5]=result.getString(6);
            modelo.addRow(usuarios);
        }
        Tbl_datos.setModel(modelo);
    } catch (SQLException ex) {
        Logger.getLogger(inventario.class.getName()).log(Level.SEVERE, null, ex);
    }
        
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Tbl_datos;
    public javax.swing.JButton btn_aceptar;
    public javax.swing.JTextField buscar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JRadioButton rdb_cantidad;
    public javax.swing.JRadioButton rdb_identificacion;
    public javax.swing.JRadioButton rdb_nombres;
    public javax.swing.JRadioButton rdb_referencia;
    public javax.swing.JRadioButton rdb_stock;
    public javax.swing.JLabel tlabel1;
    // End of variables declaration//GEN-END:variables
}
